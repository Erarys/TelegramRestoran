from typing import Optional

from aiogram.filters.callback_data import CallbackData
from aiogram.types import KeyboardButton, InlineKeyboardButton, InlineKeyboardMarkup, CallbackQuery
from aiogram.utils.keyboard import ReplyKeyboardBuilder, InlineKeyboardBuilder


class TableCallback(CallbackData, prefix="table"):
    action: str
    table_id: str

class EditOrderStatusCallback(CallbackData, prefix="edit_status"):
    status: str

def get_table_button():
    builder = ReplyKeyboardBuilder()

    for i in range(1, 6):
        builder.add(KeyboardButton(text=str(i)))

    builder.adjust(3)

    return builder.as_markup()

def get_order_button():
    builder = ReplyKeyboardBuilder()
    foods_menu = [
        "–ë–∞—Ä–∞–Ω–∏–Ω–∞ –®–∞—à–ª—ã–∫",
        "–£—Ç–∫–∞ –®–∞—à–ª—ã–∫",
        "–ö–æ–∫–∞ –ö–æ–ª–∞ 2–ª",
        "–ß–∏–ø—Å—ã",
        "–°–æ—Ö—Ä–∞–Ω–∏—Ç—å",
        "/–û—Ç–º–µ–Ω–∏—Ç—å"
    ]
    for food in foods_menu:
        builder.add(KeyboardButton(text=str(food)))

    builder.adjust(3)
    return builder.as_markup()

def get_count_button():
    builder = ReplyKeyboardBuilder()

    for i in range(0, 9):
        builder.add(KeyboardButton(text=str(i)))

    builder.adjust(3)

    return builder.as_markup()

def get_bill_button(table_id) -> InlineKeyboardButton:
    buttons = [
        [
            InlineKeyboardButton(
                text="üßπ –û—á–∏—Å—Ç–∏—Ç—å —Å—Ç–æ–ª",
                callback_data=TableCallback(action="clear", table_id=table_id).pack()
            ),
            InlineKeyboardButton(
                text="üßæ –ß–µ–∫",
                callback_data=TableCallback(action="bill", table_id=table_id).pack()
            )
        ],
        [
            InlineKeyboardButton(
                text="üìù –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å",
                callback_data=TableCallback(action="edit", table_id=table_id).pack()
            )
        ]
    ]
    keyboard = InlineKeyboardMarkup(inline_keyboard=buttons)

    return keyboard

def ready_order() -> InlineKeyboardButton:
    buttons = [
            [
                InlineKeyboardButton(
                    text="‚òëÔ∏è –ó–∞–∫–∞–∑ –ì–æ—Ç–æ–≤",
                    callback_data=EditOrderStatusCallback(status="active").pack()
                ),
                InlineKeyboardButton(
                    text="üö´ –ó–∞–∫–∞–∑ –ù–µ –≥–æ—Ç–æ–≤",
                    callback_data=EditOrderStatusCallback(status="passive").pack()
                ),
            ],
            [
                InlineKeyboardButton(
                    text="üí§ –ó–∞–∫–∞–∑ –≤—ã–ø–æ–ª–Ω–µ–Ω",
                    callback_data=EditOrderStatusCallback(status="deactivate").pack()
                ),
            ]
        ]

    keyboard = InlineKeyboardMarkup(inline_keyboard=buttons)

    return keyboard


def get_keyboard_fab():
    builder = InlineKeyboardBuilder()
    builder.button(
        text="‚òëÔ∏è –ó–∞–∫–∞–∑ –ì–æ—Ç–æ–≤", callback_data=EditOrderStatusCallback(status="activate")
    )
    builder.button(
        text="-1", callback_data=EditOrderStatusCallback(status="passive")
    )
    builder.button(
        text="+1", callback_data=EditOrderStatusCallback(status="deactivate")
    )

    # –í—ã—Ä–∞–≤–Ω–∏–≤–∞–µ–º –∫–Ω–æ–ø–∫–∏ –ø–æ 4 –≤ —Ä—è–¥, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏–ª–æ—Å—å 4 + 1
    builder.adjust(4)
    return builder.as_markup()